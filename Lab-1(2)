import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
data = pd.read_csv('creditcard.csv')
print(data.head())
print(data.info())
print(data.describe())
# Feature scaling (if needed)
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
data['scaled_amount'] = scaler.fit_transform(data['Amount'].values.reshape(-1, 1))
data['scaled_time'] = scaler.fit_transform(data['Time'].values.reshape(-1, 1))

# Drop old 'Amount' and 'Time' columns
data = data.drop(['Amount', 'Time'], axis=1)

# Split the data into features and labels
X = data.drop('Class', axis=1)  # Features
y = data['Class']  # Target (0 = not fraud, 1 = fraud)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
nb_model = GaussianNB()
nb_model.fit(X_train, y_train)
y_pred = nb_model.predict(X_test)
# Accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')

# Confusion Matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print(f'Confusion Matrix: \n{conf_matrix}')

# Classification Report
class_report = classification_report(y_test, y_pred)
print(f'Classification Report: \n{class_report}')
